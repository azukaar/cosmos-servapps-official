{
  "cosmos-installer": {
    "form": [
      {
        "name": "dataPath",
        "label": "What is the path to your data? (leave empty to not mount anything)",
        "initialValue": "{DefaultDataPath}/nextcloud-data",
        "type": "text"
      }
    ]
  },
  "minVersion": "0.7.6",
  "services": {
    "{ServiceName}": {
      "image": "nextcloud",
      "container_name": "{ServiceName}",
      "restart": "unless-stopped",
      "environment": [
        "TZ=auto",
        "NEXTCLOUD_TRUSTED_DOMAINS={Hostnames.{StaticServiceName}.{StaticServiceName}.host}",
        "MYSQL_DATABASE=nextcloud",
        "MYSQL_USER=nextcloud",
        "MYSQL_PASSWORD={Passwords.0}",
        "MYSQL_HOST={ServiceName}-mariadb",
        "REDIS_HOST={ServiceName}-redis",
        "REDIS_HOST_PASSWORD={Passwords.2}",
        "NC_overwriteprotocol=https"
      ],
      "labels": {
        "cosmos-persistent-env": "MYSQL_PASSWORD, REDIS_HOST_PASSWORD, MYSQL_DATABASE, MYSQL_USER",
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Nextcloud/icon.png",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "networks": {
        "{ServiceName}-databases": {}
      },
      "volumes": [
        {
          "source": "{ServiceName}-config",
          "target": "/var/www/html/config",
          "type": "volume"
        },
        {
          "source": "{ServiceName}-custom_apps",
          "target": "/var/www/html/custom_apps",
          "type": "volume"
        }
      {if Context.dataPath}
      , {
        "source": "{Context.dataPath}",
        "target": "/var/www/html/data",
        "type": "bind"
      }
      {/if}
    ],
      "routes": [
        {
          "Name": "{ServiceName}_caldav",
          "Description": "Redirect {ServiceName} caldav to proper route",
          "UseHost": true,
          "Host": "{Hostnames.{StaticServiceName}.{StaticServiceName}.host}",
          "UsePathPrefix": true,
          "PathPrefix": "/.well-known/caldav",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "CORSOrigin": "",
          "StripPathPrefix": false,
          "MaxBandwith": 0,
          "AuthEnabled": false,
          "AdminOnly": false,
          "Target": "https://{Hostnames.{StaticServiceName}.{StaticServiceName}.host}/remote.php/dav",
          "SmartShield": {
            "Enabled": true
          },
          "Mode": "REDIRECT",
          "BlockCommonBots": true,
          "BlockAPIAbuse": false,
          "AcceptInsecureHTTPSTarget": false
        },
        {
          "Name": "{ServiceName}_carddav",
          "Description": "Redirect {ServiceName} carddav to proper route",
          "UseHost": true,
          "Host": "{Hostnames.{StaticServiceName}.{StaticServiceName}.host}",
          "UsePathPrefix": true,
          "PathPrefix": "/.well-known/carddav",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "CORSOrigin": "",
          "StripPathPrefix": false,
          "MaxBandwith": 0,
          "AuthEnabled": false,
          "AdminOnly": false,
          "Target": "https://{Hostnames.{StaticServiceName}.{StaticServiceName}.host}/remote.php/dav",
          "SmartShield": {
            "Enabled": true
          },
          "Mode": "REDIRECT",
          "BlockCommonBots": true,
          "BlockAPIAbuse": false,
          "AcceptInsecureHTTPSTarget": false
        },
        {
          "name": "{ServiceName}",
          "description": "Expose {ServiceName} to the web",
          "useHost": true,
          "target": "http://{ServiceName}:80",
          "mode": "SERVAPP",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "BlockCommonBots": true,
          "SmartShield": {
            "Enabled": true
          }
        }
      ]
    },
    
    "{ServiceName}-mariadb": {
      "image": "mariadb:10.11",
      "container_name": "{ServiceName}-mariadb",
      "hostname": "{ServiceName}-mariadb",
      "restart": "unless-stopped",
      "stop_grace_period": 5,
      "security_opt": [
        "seccomp:unconfined",
        "apparmor:unconfined"
      ],
      "networks": {
        "{ServiceName}-databases": {}
      },
      "command": "mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120",
      "volumes": [
        {
          "source": "{ServiceName}-mariadb-data",
          "target": "/var/lib/mysql",
          "type": "volume"
        }
      ],
      "labels": {
        "cosmos-persistent-env": "MARIADB_USER, MARIADB_PASSWORD, MARIADB_ROOT_PASSWORD, MARIADB_DATABASE",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "environment": [
        "MARIADB_AUTO_UPGRADE=1",
        "MARIADB_INITDB_SKIP_TZINFO=1",
        "MARIADB_DATABASE=nextcloud",
        "MARIADB_USER=nextcloud",
        "MARIADB_PASSWORD={Passwords.0}",
        "MARIADB_ROOT_PASSWORD={Passwords.1}"
      ]
    },

    "{ServiceName}-redis": {
      "image": "bitnami/redis:latest",
      "container_name": "{ServiceName}-redis",
      "hostname": "{ServiceName}-redis",
      "restart": "unless-stopped",
      "stop_grace_period": 5,
      "security_opt": [
        "seccomp:unconfined",
        "apparmor:unconfined"
      ],
      "labels": {
        "cosmos-persistent-env": "REDIS_PASSWORD",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "networks": {
        "{ServiceName}-databases": {}
      },
      "volumes": [
        {
          "source": "{ServiceName}-redis-data",
          "target": "/bitnami/redis",
          "type": "volume"
        }
      ],
      "environment": [
        "ALLOW_EMPTY_PASSWORD=no",
        "REDIS_PASSWORD={Passwords.2}",
        "REDIS_EXTRA_FLAGS=--auto-aof-rewrite-percentage 100 --auto-aof-rewrite-min-size 64mb"
      ]
    }
  },

  "networks": {
    "{ServiceName}-databases": {
    }
  }
}
