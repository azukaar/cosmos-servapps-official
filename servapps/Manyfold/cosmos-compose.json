{
  "cosmos-installer": {
    "form": [
      {
        "name": "modelPaths",
        "label": "What is the path of your models? (leave empty to not mount anything)",
        "initialValue": "{DefaultDataPath}/3D_models",
        "type": "text"
      },
      {
        "name": "adminOnly",
        "label": "Do you want to make this service admin only?",
        "initialValue": false,
        "type": "checkbox"
      }
    ]
  },
  "minVersion": "0.8.0",
  "services": {
    "{ServiceName}": {
      "image": "ghcr.io/manyfold3d/manyfold:latest",
      "container_name": "{ServiceName}",
      "restart": "unless-stopped",
      "UID": 1000,
      "GID": 1000,
      "environment": [
        "PUID=1000",
        "PGID=1000",
        "REDIS_URL=redis://{ServiceName}-redis:6379",
        "REDIS_PORT=6379",
        "SECRET_KEY_BASE={Passwords.3}",
        "DB_HOST={ServiceName}-postgres",
        "DB_USER=manyfold",
        "DB_NAME=manyfold",
        "DB_PASS={Passwords.0}",
        "DB_PORT=5432",
	"DATABASE_URL=postgresql://{DB_USER}:{DB_PASS}@{DB_HOST}/{DB_NAME}?pool=5"
      ],
      "security_opt": [
        "no-new-privileges:true"
      ],
      "cap_drop": [
        "ALL"
      ],
      "cap_add": [
        "CHOWN",
        "SETGID",
        "SETUID"
      ],
      "labels": {
        "cosmos-persistent-env": "SECRET_KEY_BASE, DB_PASS, DB_USER, DB_NAME",
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Manyfold/icon.png",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "networks": {
        "{ServiceName}-data": {}
      },
      "volumes": [
        {if Context.modelPaths}
        {
          "source": "{Context.modelPaths}",
          "target": "/3D_models",
          "type": "bind"
        }
        {/if}
      ],
      "routes": [
        {
          "name": "{ServiceName}",
          "description": "Expose {ServiceName} to the web",
          "useHost": true,
          "target": "http://{ServiceName}:3214",
          "mode": "SERVAPP",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "BlockCommonBots": true,
          "SmartShield": {
            "Enabled": true
          },
          "AuthEnabled": true
          {if Context.adminOnly}
           , "AuthAdmin": true
          {/if}
        }
      ]
    },

    "{ServiceName}-redis": {
      "restart": "always",
      "image": "redis:7-alpine",
      "container_name": "{ServiceName}-redis",
      "hostname": "{ServiceName}-redis",
      "networks": {
        "{ServiceName}-data": {}
      },
      "labels": {
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Manyfold/icon.png",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "healthcheck": {
        "test": [
          "CMD",
          "redis-cli",
          "ping"
        ]
      }
    },


    "{ServiceName}-postgres": {
      "image": "postgres:15-alpine",
      "container_name": "{ServiceName}-postgres",
      "hostname": "{ServiceName}-postgres",
      "restart": "unless-stopped",
      "stop_grace_period": 5,
      "networks": {
        "{ServiceName}-data": {}
      },
      "labels": {
        "cosmos-persistent-env": "POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD",
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Manyfold/icon.png",
        "cosmos-stack": "{ServiceName}",
        "cosmos-stack-main": "{ServiceName}"
      },
      "volumes": [
        {
          "source": "{ServiceName}-postgres-data",
          "target": "/var/lib/postgresql/data",
          "type": "volume"
        }
      ],
      "environment": [
        "POSTGRES_DB=manyfold",
        "POSTGRES_USER=manyfold",
        "POSTGRES_PASSWORD={Passwords.0}"
      ]
    }
  },

  "networks": {
    "{ServiceName}-data": {
    }
  }
}
