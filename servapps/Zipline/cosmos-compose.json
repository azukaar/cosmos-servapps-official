{
    "cosmos-installer": {
      "form": [
        {
          "name": "coreSecret",
          "label": "Secret random key (32 characters)",
          "initialValue": "may_not_be_empty_&_32_chars_long",
          "type": "text"
        },
        {
          "name": "s3storage",
          "label": "Enable S3 compatible storage",
          "initialValue": false,
          "type": "checkbox"
        }
        {if Context.s3storage}
        , {
            "name": "dataSourceS3AccessKeyId",
            "label": "S3 access key ID",
            "type": "text"
          }
        , {
            "name": "dataSourceS3SecretAccessKey",
            "label": "S3 secret access key",
            "type": "text"
          }
        , {
            "name": "dataSourceS3Bucket",
            "label": "S3 bucket name",
            "initialValue": "zipline",
            "type": "text"
          }
        , {
            "name": "dataSourceS3Region",
            "label": "S3 region",
            "initialValue": "us-east-1",
            "type": "text"
          }
        , {
            "name": "dataSourceS3Endpoint",
            "label": "S3 endpoint (only required when not using Amazon AWS S3)",
            "type": "text"
          }
        , {
            "name": "dataSourceS3ForcePathStyle",
            "label": "Enable path-style requests for your S3 provider",
            "initialValue": false,
            "type": "checkbox"
          }
        {/if}
        , {
          "name": "useBinds",
          "label": "Use local folders instead of volumes",
          "initialValue": false,
          "type": "checkbox"
        }
        {if Context.useBinds}
        {if not Context.s3storage}
        , {
            "name": "dataSourceLocalUpload",
            "label": "The absolute path to the uploads folder.",
            "initialValue": "/your_local_zipline_folder/uploads",
            "type": "text"
          }
        {/if}
        , {
            "name": "dataSourceLocalPublic",
            "label": "The absolute path to the public folder.",
            "initialValue": "/your_local_zipline_folder/public",
            "type": "text"
          }
        , {
            "name": "dataSourceLocalThemes",
            "label": "The absolute path to the themes folder.",
            "initialValue": "/your_local_zipline_folder/themes",
            "type": "text"
          }
        {/if}
        , {
          "name": "adminOnly",
          "label": "Make this service admin only",
          "initialValue": "false",
          "type": "checkbox"
        }
      ]
    },
    "minVersion": "0.8.0",
    "services": {
      "{ServiceName}": {
        "image": "ghcr.io/diced/zipline:latest",
        "container_name": "{ServiceName}",
        "restart": "unless-stopped",
        "environment": [
          "CORE_SECRET={Context.coreSecret}",
           {if Context.s3storage}
            "DATASOURCE_TYPE=s3",
            "DATASOURCE_S3_ACCESS_KEY_ID={Context.dataSourceS3AccessKeyId}",
            "DATASOURCE_S3_SECRET_ACCESS_KEY={Context.dataSourceS3SecretAccessKey}",
            "DATASOURCE_S3_BUCKET={Context.dataSourceS3Bucket}",
            {if Context.dataSourceS3Region}
            "DATASOURCE_S3_REGION={Context.dataSourceS3Region}",
            {/if}
            {if Context.dataSourceS3Endpoint}
            "DATASOURCE_S3_ENDPOINT={Context.dataSourceS3Endpoint}",
            {/if}
            {if Context.dataSourceS3ForcePathStyle}
            "DATASOURCE_S3_FORCE_PATH_STYLE=true",
            {/if}
          {else}
            "DATASOURCE_TYPE=local",
            "DATASOURCE_LOCAL_DIRECTORY=./uploads",
          {/if}
          "DATABASE_URL=postgres://zipline:{Passwords.0}@{ServiceName}-postgres:5432/zipline"
        ],
        "labels": {
          "cosmos-persistent-env": "CORE_SECRET",
          "cosmos-force-network-secured": "true",
          "cosmos-auto-update": "true",
          "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Zipline/icon.png",
          "cosmos-stack": "{ServiceName}",
          "cosmos-stack-main": "{ServiceName}"
        },
        "depends_on": {
          "{ServiceName}-postgres" : {}
        },
        "networks": {
          "{ServiceName}-data": {}
        },
        "volumes": [
          {if Context.useBinds}
          {if not Context.s3storage}
          {
            "source": "{Context.dataSourceLocalUpload}",
            "target": "/zipline/uploads",
            "type": "bind"
          },
          {/if}
          {
            "source": "{Context.dataSourceLocalPublic}",
            "target": "/zipline/public",
            "type": "bind"
          },
          {
            "source": "{Context.dataSourceLocalThemes}",
            "target": "/zipline/themes",
            "type": "bind"
          }
          {else}
          {if not Context.s3storage}
          {
            "source": "{ServiceName}-uploads",
            "target": "/zipline/uploads",
            "type": "volume"
          },
          {/if}
          {
            "source": "{ServiceName}-public",
            "target": "/zipline/public",
            "type": "volume"
          },
          {
            "source": "{ServiceName}-themes",
            "target": "/zipline/themes",
            "type": "volume"
          }
          {/if}
        ],
        "routes": [
          {
            "name": "{ServiceName}",
            "description": "Expose {ServiceName} to the web",
            "useHost": true,
            "target": "http://{ServiceName}:3000",
            "mode": "SERVAPP",
            "Timeout": 14400000,
            "ThrottlePerMinute": 12000,
            "BlockCommonBots": true,
            "SmartShield": {
              "Enabled": true
            }
            {if Context.adminOnly}
             , "AuthAdmin": true
            {/if}
          }
        ]
      },
      "{ServiceName}-postgres": {
        "image": "postgres:16",
        "container_name": "{ServiceName}-postgres",
        "hostname": "{ServiceName}-postgres",
        "restart": "unless-stopped",
        "stop_grace_period": 5,
        "healthcheck": {
          "test": [
            "CMD",
            "pg_isready",
            "-U",
            "zipline"
          ],
          "interval": 10,
          "timeout": 5,
          "retries": 5
        },
        "networks": {
          "{ServiceName}-data": {}
        },
        "labels": {
          "cosmos-persistent-env": "POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD",
          "cosmos-force-network-secured": "true",
          "cosmos-auto-update": "true",
          "cosmos-icon": "https://azukaar.github.io/cosmos-servapps-official/servapps/Zipline/icon.png",
          "cosmos-stack": "{ServiceName}",
          "cosmos-stack-main": "{ServiceName}"
        },
        "volumes": [
          {
            "source": "{ServiceName}-postgres-data",
            "target": "/var/lib/postgresql/data",
            "type": "volume"
          }
        ],
        "environment": [
          "POSTGRES_DB=zipline",
          "POSTGRES_USER=zipline",
          "POSTGRES_PASSWORD={Passwords.0}"
        ]
      }
    },
  
    "networks": {
      "{ServiceName}-data": {
      }
    }
  }