# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with:
          node-version: 18.x
      - name: Set Github Page Url Variable
        id: get_page_url
        run: |
          if [ -f "CNAME" ]; then
            DOMAIN=$(cat CNAME)
            echo "Custom domain found: $DOMAIN"
          else
            DOMAIN="${{ github.repository_owner }}.github.io"
            echo "No custom domain found. Using default domain: $DOMAIN"
          fi
          REPOSITORY_NAME="${{ github.event.repository.name }}"
          FULL_URL="$DOMAIN/$REPOSITORY_NAME"
          echo "::set-output name=url::$FULL_URL"
      - name: Build index
        run: node index.js
        env:
          GITHUB_PAGES_URL: ${{ steps.get_page_url.outputs.url }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
